package view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;


import model.Button_cell;
import model.CurrenPlayer;

public class TicTacToeView extends JFrame {
	private static final int M = 20;
	private Button_cell[][] BTXO = new Button_cell[M][M];
	private CurrenPlayer currenplayer = new CurrenPlayer();
	public TicTacToeView() {
		// TODO Auto-generated constructor stub
		init();
		this.setVisible(true);
		
	}
	public void init() {
		JPanel panel = new JPanel();
		
		this.setSize(600,600);
		this.setTitle("Game Caro");
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setLayout(new BorderLayout());
		panel.setLayout(new GridLayout(M,M));
		for(int i =0 ;i<M;i++)
			for(int j =0 ;j<M;j++) {
				Button_cell bt  = new Button_cell();
				BTXO[i][j] = bt;
				BTXO[i][j].addMouseListener(new MouseListener() {
					
					@Override
					public void mouseReleased(MouseEvent e) {
						// TODO Auto-generated method stub
						
					}
					
					@Override
					public void mousePressed(MouseEvent e) {
						// TODO Auto-generated method stub
						
					}
					
					@Override
					public void mouseExited(MouseEvent e) {
						// TODO Auto-generated method stub
						bt.setBackground(Color.white);
					}
					
					@Override
					public void mouseEntered(MouseEvent e) {
						// TODO Auto-generated method stub
						bt.setBackground(null);
					}
					
					@Override
					public void mouseClicked(MouseEvent e) {
						// TODO Auto-generated method stub
						if(bt.p.isVisited()== false) {
							if(currenplayer.getCurrenplayer().equals("O")) {
								bt.setIcon(new ImageIcon("C:\\DATA\\GM2\\src\\view\\o1.png"));
								bt.p.setVisited(true);
								currenplayer.setCurrenplayer("X");
								currenplayer.setCurren_cell(bt);
								
							}
							else if(currenplayer.getCurrenplayer().equals("X")) {
								bt.setIcon(new ImageIcon("C:\\DATA\\GM2\\src\\view\\x1.png"));
								bt.p.setVisited(true);
								currenplayer.setCurrenplayer("O");
								currenplayer.setCurren_cell(bt);
								
							}
							
						}
					}
				});
				panel.add(BTXO[i][j]);
			}
		this.add(panel,BorderLayout.CENTER);
	}
	public void check( int i, int j) {
		//Hang ngang
	    int count = 0;
        for(int col = 0; col < M; col++){
            Button_cell cell = BTXO[i][col];
            if (cell.p.getValue().equals(currenplayer.getCurrenplayer())) {
                count++;
                if(count == 5){
                    System.out.println("Ngang");
                    return;
                }
            }else {
                count = 0;
            }
        }


        //Chiều dọc
        count = 0;
        for(int row = 0; row < M; row++){
        	Button_cell cell = BTXO[row][j];
            if (cell.p.getValue().equals(currenplayer.getCurrenplayer())) {
                count++;
                if(count == 5){
                    System.out.println("Dọc");
                    return ;
                }
            }else {
                count = 0;
            }
        }

        //Chéo trái
//        int min = Math.min(i, j);
//        int TopI = i - min;
//        int TopJ = j - min;
//        count = 0;
//
//        for(;TopI < N && TopJ < M; TopI++, TopJ++){
//            Cell cell = matrix[TopI][TopJ];
//            if (cell.getValue().equals(currentPlayer)) {
//                count++;
//                if(count == 5){
//                    System.out.println("Chéo trái");
//                    return ST_WIN;
//                }
//            }else {
//                count = 0;
//            }
//        }
//
//
//        //Chéo phải
//        min = Math.min(i, j);
//        TopI = i - min;
//        TopJ = j + min;
//        count = 0;
//
//        if(TopJ >= M){
//            int du = TopJ - (M - 1);
//            TopI = TopI + du;
//            TopJ = M - 1;
//        }
//
//        for(;TopI < N && TopJ >= 0; TopI++, TopJ--){
//            Cell cell = matrix[TopI][TopJ];
//            if (cell.getValue().equals(currentPlayer)) {
//                count++;
//                if(count == 5){
//                    System.out.println("Chéo phải");
//                    return ST_WIN;
//                }
//            }else {
//                count = 0;
//            }
//        }
//
//        if(this.isFull()){
//            return ST_DRAW;
//        }
//
//        return ST_NORMAL;
//    }
		
	}
	

}
